openapi: 3.0.0
info:
  description: ''
  version: 1.1.0
  title: Customer DB
tags:
  - name: Customer DB
    description: ''
paths:
  /customer/post:
    post:
      tags:
        - customer
      summary: add a new customer to database
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.post_customer
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        description: customer details
        required: true
  /customer/get:
    get:
      tags:
        - customer
      summary: retrieve customer details
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.get_customer
      parameters:
        - in: query
          name: id
          description: customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
        '401':
          description: Authentication error
        '409':
          description: Conflict
  /customer/put/{id}:
    put:
      tags:
      - customer
      summary: update customer
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.put_customer
      parameters:
      - name: id
        in: path
        description: customer id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
        '401':
          description: Authentication error
        '409':
          description: Conflict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
        description: name of data field and new value
        required: true

  /payment/post:
    post:
      tags:
        - payment
      summary: add new payment details to database
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.post_payment
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        description: payment details
        required: true
  /payment/get:
    get:
      tags:
        - payment
      summary: retrieve payment details
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.get_payment
      parameters:
        - in: query
          name: id
          description: payment detail id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
        '401':
          description: Authentication error
        '409':
          description: Conflict
  /payment/get_by_customer:
    get:
      tags:
        - payment
      summary: retrieve payment details by customer
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.get_payment_by_customer
      parameters:
        - in: query
          name: customer_id
          description: customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
        '409':
          description: Conflict
  /payment/put/{id}:
    put:
      tags:
      - payment
      summary: update payment details
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.put_payment
      parameters:
      - name: id
        in: path
        description: payment id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
        '401':
          description: Authentication error
        '409':
          description: Conflict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
        description: name of data field and new value
        required: true

  /invoices/post:
    post:
      tags:
        - invoices
      summary: add new invoice to database
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.post_invoice
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoices'
        description: invoice
        required: true
  /invoices/get:
    get:
      tags:
        - invoices
      summary: retrieve invoice
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.get_invoice
      parameters:
        - in: query
          name: id
          description: invoice id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
        '401':
          description: Authentication error
        '409':
          description: Conflict
  /invoices/get_by_customer:
    get:
      tags:
        - invoices
      summary: retrieve invoices by customer
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.get_invoices_by_customer
      parameters:
        - in: query
          name: customer_id
          description: customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
        '409':
          description: Conflict
  /invoices/get_by_customer_unpaid:
    get:
      tags:
        - invoices
      summary: retrieve invoices that are marked as unpaid - by customer
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.get_invoices_by_customer_open
      parameters:
        - in: query
          name: customer_id
          description: customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
        '409':
            description: Conflict
  /invoices/get_by_customer_paid:
    get:
      tags:
        - invoices
      summary: retrieve invoices that are marked as paid - by customer
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.get_invoices_by_customer_paid
      parameters:
        - in: query
          name: customer_id
          description: customer id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
        '409':
          description: Conflict
  /invoices/put/{id}:
    put:
      tags:
      - invoices
      summary: update invoice
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.put_invoice
      parameters:
      - name: id
        in: path
        description: invoice id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
        '400':
          description: Invalid input
        '401':
          description: Authentication error
        '409':
          description: Conflict
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
        description: name of data field and new value
        required: true
  /query/get_quote:
    get:
      tags:
        - query
      summary: returns array of price overview
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.get_quote
      parameters:
        - in: query
          name: n
          description: number of students in query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error
  /query/get_price:
    get:
      tags:
        - query
      summary: returns array of price overview
      description: ''
      operationId: swagger_server.controllers.customer_db_functions.get_price
      parameters:
        - in: query
          name: n
          description: number of RSVPs
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '401':
          description: Authentication error      

servers:
  - url: 'http://localhost:8000'
components:
  schemas:
    Customer:
      type: object
      properties:
        name:
          type: string
        payment_type:
          type: string
        contact:
          type: object
          properties:
            name:
              type: string
            email:
              type: string
            phone:
              type: object
              properties:
                number: 
                  type: string
                country_code:
                  type: string
      xml:
        name: Customer
    Payment:
      type: object
      properties:
        customer_id:
          type: string
        address:
          type: object
          properties:
            name:
              type: string
            street:
              type: string
            number:
              type: string
            city:
              type: string
            zip:
              type: string
            state:
              type: string
            country: 
              type: string
        payment:
          type: object
          properties:
            currency: 
              type: string
            frequency:
              type: string
            frequency_interval:
              type: string
      xml:
        name: Invoice
    Invoices:
      type: object
      properties:
        customer_id:
          type: string
        query_id:
          type: string
        payment:
          type: object
          properties:
            currency:
              type: string
            complete:
              type: boolean
              default: false
      xml:
        name: Payment
    Parameter:
      type: object
      properties:
        field:
          type: string
        value:
          type: string
      xml:
        name: Parameter